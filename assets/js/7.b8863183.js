(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{365:function(t,s,e){"use strict";e.r(s);var a=e(18),o=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"diceroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diceroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("DiceRoller")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("DiceRoller")]),t._v(" is the main class that can roll dice, remember previous rolls and output results.")]),t._v(" "),e("p",[t._v("It can have multiple, independent instances, each with it's own log of dice rolls, which is handy if you're rolling for several unrelated things.")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// my first DiceRoller")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" roller1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiceRoller")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// my second DiceRoller")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" roller2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiceRoller")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"constructor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[t._v("#")]),t._v(" Constructor")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("DiceRoller")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("The "),e("code",[t._v("DiceRoller")]),t._v(" constructor takes an "),e("em",[t._v("optional")]),t._v(" "),e("code",[t._v("data")]),t._v(" argument. which should be an object containing a "),e("code",[t._v("log")]),t._v(" property. The "),e("code",[t._v("log")]),t._v(" property should be an array of "),e("code",[t._v("DiceRoll")]),t._v(" objects:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" roller "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiceRoller")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a list of DiceRoll objects")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("This allows importing of "),e("code",[t._v("DiceRoll")]),t._v("s and is equivalent to doing:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" roller "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DiceRoller"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  logs"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a list of DiceRoll objects")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"prototype-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prototype-methods"}},[t._v("#")]),t._v(" Prototype methods")]),t._v(" "),e("p",[t._v("Prototype methods can be called on an instance of the object, like so:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" roller "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiceRoller")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nroller"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("roll")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d6'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("Method")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Return")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("clearLog()")])]),t._v(" "),e("td",[t._v("Clears the roll history log.")]),t._v(" "),e("td",[e("code",[t._v("void")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("export({exportFormats=} format)")])]),t._v(" "),e("td",[t._v("Exports the "),e("code",[t._v("DiceRoller")]),t._v(" object to the specified format. Throws "),e("code",[t._v("Error")]),t._v(" if format is invalid")]),t._v(" "),e("td",[e("code",[t._v("string\\|null")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("import({mixed} data)")])]),t._v(" "),e("td",[t._v("Imports the given data and appends it to the current roll log, returning the updated log. Throws "),e("code",[t._v("Error")]),t._v(" if data type is invalid")]),t._v(" "),e("td",[e("code",[t._v("DiceRoll[]")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("roll({String} ...notation)")])]),t._v(" "),e("td",[t._v("Rolls the dice notation returning the rolls. You can pass in multiple notations (i.e "),e("code",[t._v("roll('d6', '2d8')")]),t._v(")")]),t._v(" "),e("td",[e("code",[t._v("DiceRoll\\|DiceRoll[]")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("toJSON()")])]),t._v(" "),e("td",[t._v("Returns a JSON serialisable version of the object. Called automatically when using "),e("code",[t._v("JSON.stringify(roller)")])]),t._v(" "),e("td",[e("code",[t._v("Object")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("toString()")])]),t._v(" "),e("td",[t._v("Returns a string representation of the object (See "),e("code",[t._v("output")]),t._v(" property). Called automatically when the object is cast to a string (ie. "),e("code",[t._v("Rolled: ${diceroller}")]),t._v(")")]),t._v(" "),e("td",[e("code",[t._v("string")])])])])]),t._v(" "),e("h2",{attrs:{id:"properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("log")])]),t._v(" "),e("td",[e("code",[t._v("DiceRoll[]")])]),t._v(" "),e("td",[t._v("A list of the current roll logs")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("output")])]),t._v(" "),e("td",[e("code",[t._v("String")])]),t._v(" "),e("td",[t._v("String representation of the object, in the format of: "),e("code",[t._v("2d20+1d6: [20,2]+[2] = 24; 1d8: [6] = 6")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("total")])]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("The sum of all the rolls in the "),e("code",[t._v("log")])])])])]),t._v(" "),e("h2",{attrs:{id:"static-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#static-methods"}},[t._v("#")]),t._v(" Static methods")]),t._v(" "),e("p",[t._v("Static methods can be called on the class itself, without instantiating an object, like so:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" diceRoller "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DiceRoller"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("Method")]),t._v(" "),e("th",[t._v("Return")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("import({mixed} data)")])]),t._v(" "),e("td",[e("code",[t._v("DiceRoller")])]),t._v(" "),e("td",[t._v("Imports the given data and creates a new "),e("code",[t._v("DiceRoller")]),t._v(" object")])])])])])}),[],!1,null,null,null);s.default=o.exports}}]);