(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{363:function(t,a,e){"use strict";e.r(a);var s=e(18),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"comparepoint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#comparepoint"}},[t._v("#")]),t._v(" "),e("code",[t._v("ComparePoint")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("ComparePoint")]),t._v(" object can check if a number matches a particular test. For example, is "),e("code",[t._v("numberA")]),t._v(" greater than "),e("code",[t._v("3")]),t._v(", or is "),e("code",[t._v("numberB")]),t._v(" equal to "),e("code",[t._v("10")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"constructor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[t._v("#")]),t._v(" Constructor")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {string} operator The compare operator (ie. '=')\n * @param {number} value The compare value (ie. `7`)\n */")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ComparePoint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" operator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("number"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("A "),e("code",[t._v("ComparePoint")]),t._v(" instance requires an "),e("code",[t._v("operator")]),t._v(" and "),e("code",[t._v("value")]),t._v(" passed to the constructor:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create a ComparePoint that checks if numbers are equal to 6")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ComparePoint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("If either of these is missing or invalid an error will be thrown.")]),t._v(" "),e("h2",{attrs:{id:"prototype-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prototype-methods"}},[t._v("#")]),t._v(" Prototype methods")]),t._v(" "),e("p",[t._v("Prototype methods can be called on an instance of the object, like so:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create a ComparePoint that checks if numbers are NOT equal to 2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" cp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ComparePoint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!='")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMatch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns true")]),t._v("\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("Method")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Return")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("isMatch({Number} value)")])]),t._v(" "),e("td",[t._v("Checks whether value matches the compare point")]),t._v(" "),e("td",[e("code",[t._v("boolean")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("toJSON()")])]),t._v(" "),e("td",[t._v("Returns a JSON serialisable version of the object. Called automatically when using "),e("code",[t._v("JSON.stringify(cp)")])]),t._v(" "),e("td",[e("code",[t._v("Object")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("toString()")])]),t._v(" "),e("td",[t._v("Returns a string representation of the object. Called automatically when the object is cast to a string (ie. "),e("code",[t._v("CP: ${cp}")]),t._v(")")]),t._v(" "),e("td",[e("code",[t._v("string")])])])])]),t._v(" "),e("h2",{attrs:{id:"properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[t._v("#")]),t._v(" Properties")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Property")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("operator")])]),t._v(" "),e("td",[e("code",[t._v("string")])]),t._v(" "),e("td",[t._v("The comparison operator. Can be one of: "),e("code",[t._v("=")]),t._v(", "),e("code",[t._v("!=")]),t._v(", "),e("code",[t._v("<")]),t._v(", "),e("code",[t._v(">")]),t._v(", "),e("code",[t._v("<=")]),t._v(", "),e("code",[t._v(">=")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("value")])]),t._v(" "),e("td",[e("code",[t._v("Number")])]),t._v(" "),e("td",[t._v("The comparison value (ie. the "),e("code",[t._v("8")]),t._v(" in "),e("code",[t._v(">8")]),t._v(")")])])])]),t._v(" "),e("h2",{attrs:{id:"static-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#static-methods"}},[t._v("#")]),t._v(" Static methods")]),t._v(" "),e("p",[t._v("Static methods can be called on the class itself, without instantiating an object, like so:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isValid "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ComparePoint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValidOperator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'='")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("Method")]),t._v(" "),e("th",[t._v("Description")]),t._v(" "),e("th",[t._v("Return")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("isValidOperator({string} operator)")])]),t._v(" "),e("td",[t._v("Checks if the operator is valid")]),t._v(" "),e("td",[e("code",[t._v("boolean")])])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);